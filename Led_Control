#include <ESP8266WiFi.h>
#include "Adafruit_MQTT.h"
#include "Adafruit_MQTT_Client.h"

/************************* WiFi Access Point *********************************/
// Sesuaikan dengan access point yang digunakan

#define WLAN_SSID       "Xperia Z3_b8ab"
#define WLAN_PASS       "148c6f82d0fb"

/************************* Adafruit.io Setup *********************************/
// Sesuaikan dengan akun masing-masing

#define AIO_SERVER      "io.adafruit.com"
#define AIO_SERVERPORT  1883                   // port 8883 untuk SSL
#define AIO_USERNAME    "simbolonmoses40"
#define AIO_KEY         "a09b66341e354f42bce6a45b5a53404d"

// Create an ESP8266 WiFiClient class to connect to the MQTT server.
WiFiClient client;

// Setup MQTT client untuk koneksi ke MQTT broker
Adafruit_MQTT_Client mqtt(&client, AIO_SERVER, AIO_SERVERPORT, AIO_USERNAME, AIO_KEY);

// Feed data untuk di subscribe
Adafruit_MQTT_Subscribe led_control = Adafruit_MQTT_Subscribe(&mqtt, AIO_USERNAME "/feeds/led_control");

void MQTT_connect();

void setup() {
  //pinMode(LED_BUILTIN, OUTPUT);
  pinMode(D5, OUTPUT);
  Serial.begin(115200);
  delay(10);

  Serial.println(F("MQTT Client"));

  // Koneksi ke akses point
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(WLAN_SSID);

  WiFi.begin(WLAN_SSID, WLAN_PASS);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println();

  Serial.println("WiFi connected");
  Serial.println("IP address: "); Serial.println(WiFi.localIP());

  // Aktifkan subscription
  mqtt.subscribe(&led_control);
}

void loop() {
  MQTT_connect();

  Adafruit_MQTT_Subscribe *subscription;
  while ((subscription = mqtt.readSubscription(5000))) {
    if (subscription == &led_control) {
      Serial.print(F("led_control data: "));
      String led_data((char *)led_control.lastread);
      Serial.println(led_data);
      if (led_data.equals("ON")) {
        digitalWrite(D5, HIGH);
      }
      else if (led_data.equals("OFF")) {
        digitalWrite(D5, LOW);
      }
    }
  }
}

void MQTT_connect() {
  int8_t ret;

  if (mqtt.connected()) {
    return;
  }

  Serial.print("Connecting to MQTT... ");

  uint8_t retries = 3;
  while ((ret = mqtt.connect()) != 0) {
    Serial.println(mqtt.connectErrorString(ret));
    Serial.println("Retrying MQTT connection in 5 seconds...");
    mqtt.disconnect();
    delay(5000);  // wait 5 seconds
    retries--;
    if (retries == 0) {
      while (1);
    }
  }
  Serial.println("MQTT Connected!");
}
